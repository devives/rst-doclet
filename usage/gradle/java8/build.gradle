plugins {
    id 'java'
}

group = 'com.devives'
version = '0.2.0'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

javadoc.options.encoding = "UTF-8"
javadoc.failOnError = false

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
        vendor = JvmVendorSpec.BELLSOFT
    }
}

sourceSets {
    main {
        java {
            srcDirs './../../../samples/src/main/java8/'
        }
    }
}

repositories {
    mavenLocal()
//    mavenCentral()
}

configurations {
    rstDoclet
}

dependencies {
    rstDoclet("com.devives:devive-rst-doclet-jdk8-all:0.2.1")

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.register('clean-javadoc2rst', Delete) {
    group = 'documentation'
    delete file("$docsDir/javadoc2rst")
}

tasks.register('javadoc2rst', Javadoc) {
    dependsOn('clean-javadoc2rst')
    description = 'Generate rst files based on javadoc comments in code.'
    group = 'documentation'
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    destinationDir = file("$docsDir/javadoc2rst")
    failOnError = true
    options.docletpath = configurations.rstDoclet.files as List
    options.doclet = "com.devives.rstdoclet.RstDoclet"
    options.encoding = "UTF-8"
    options.showFromPackage()
    (options as CoreJavadocOptions).addStringOption("packageindexfilename", "package-index")
    finalizedBy('copy-rst-to-sphinx-source')
}

tasks.register('clean-sphinx-source', Delete) {
    group = 'documentation-sphinx'
    delete file("$projectDir/sphinx/source/com/")
}
tasks.register('copy-rst-to-sphinx-source', Copy) {
    dependsOn(javadoc2rst, 'clean-sphinx-source')
    description = 'Coping rst-files, generated by task `javadoc2rst`, to the sphinx working directory.'
    group = 'documentation-sphinx'
    from(file("$docsDir/javadoc2rst"))
    into(file("$projectDir/sphinx/source"))
    println("Copy files from '" + file("$docsDir/javadoc2rst") + "' to '" + file("$projectDir/sphinx/source" + "'."))
    exclude('**/com/devives/samples/internals/**')
    finalizedBy('sphinx-make-html')
}

tasks.register('sphinx-clean', Exec) {
    description = 'Clean Sphinx\'s `build` directory.'
    group = 'documentation-sphinx'
    workingDir = file('./sphinx/')
    // on windows:
    commandLine = ['cmd', '/c', 'make.bat']
    // on linux
    // commandLine './make.sh'
    args('clean')
}

tasks.register('sphinx-make-html', Exec) {
    dependsOn('copy-rst-to-sphinx-source', 'sphinx-clean')
    description = 'Execute sphinx\'s `make.bat html` for generated rts-files.'
    group = 'documentation-sphinx'
    workingDir = file('./sphinx/')
    // on windows:
    commandLine = ['cmd', '/c', 'make.bat']
    // on linux
    // commandLine './make.sh'
    args('html')
}
